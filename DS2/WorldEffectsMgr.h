#pragma once

#include "Enums.h"
#include "GPBString.h"
#include "Nema.h"

#include "ClassMacros.h"

struct Goid_;
struct Quat;
struct Scid_;
struct SiegePos;
struct vector_3;

enum eCreateFFXFlags {

};

class WorldEffectsMgr {
public:
	DefineSingleton(WorldEffectsMgr, 0x424434);

	DefineMethod(AttachAnimatedModelToTarget, 0x8c8313, bool, Params(unsigned long unk1, unsigned long unk2), Args(unk1, unk2));
	DefineMethod(AttachLightSourceToTarget, 0x8c7137, bool, Params(unsigned long unk1, unsigned long unk2), Args(unk1, unk2));
	DefineMethod(AttachTerrainDeformerToTarget, 0x8c8415, bool, Params(unsigned long unk1, unsigned long unk2), Args(unk1, unk2));
	DefineMethod(BindFlickFXPoint, 0x8ca36f, bool, Params(const FFXID_* unk1, const gpbstring<char>& unk2, const SiegePos& unk3), Args(unk1, unk2, unk3));
	DefineMethod(BindFlickFXProperty, 0x8c7bf8, bool, Params(const FFXID_* unk1, const gpbstring<char>& unk2, const gpbstring<char>& unk3), Args(unk1, unk2, unk3));
	DefineMethod(BindFlickFXRole, 0x8c7ba9, bool, Params(const FFXID_* unk1, const gpbstring<char>& unk2, const Goid_* unk3), Args(unk1, unk2, unk3));
	DefineMethod(DestroyAllTargetEffects, 0x8c4ce7, bool, Params(unsigned long unk1), Args(unk1));
	DefineMethod(DestroyAllTargets, 0x8c330c, bool, NO_PARAMS, NO_ARGS);
	DefineMethod(DestroyAllTargetSimulations, 0x8c8b2e, bool, Params(unsigned long unk1), Args(unk1));
	DefineMethod(DestroyAnimatedModel, 0x8cf1ea, bool, Params(unsigned long unk1), Args(unk1));
	DefineMethod(DestroyDecal, 0x8c7273, bool, Params(unsigned long unk1, bool unk2), Args(unk1, unk2));
	DefineMethod(DestroyEffectScript, 0x8c792e, bool, Params(unsigned long unk1), Args(unk1));
	DefineMethod(DestroyFlickFX, 0x423e07, bool, Params(const FFXID_* unk1), Args(unk1));
	DefineMethod(DestroyLightSource, 0x8c70fb, bool, Params(unsigned long unk1), Args(unk1));
	DefineMethod(DestroyTarget, 0x8ccca0, bool, Params(unsigned long unk1), Args(unk1));
	DefineMethod(DestroyTerrainDeformer, 0x8cf41d, bool, Params(unsigned long unk1), Args(unk1));
	DefineMethod(DetachTargetSimulation, 0x8c8ad6, bool, Params(unsigned long unk1, unsigned long unk2, float unk3), Args(unk1, unk2, unk3));
	DefineMethod(DetachTargetSimulation, 0x423c9d, bool, Params(unsigned long unk1, unsigned long unk2), Args(unk1, unk2));
	DefineMethod(FadeAnimatedModel, 0x8c8349, bool, Params(unsigned long unk1, float unk2, float unk3, float unk4, float unk5), Args(unk1, unk2, unk3, unk4, unk5));
	DefineMethod(FadeAnimatedModel, 0x423b82, bool, Params(unsigned long unk1, float unk2, float unk3, float unk4), Args(unk1, unk2, unk3, unk4));
	DefineMethod(FadeOutLightSource, 0x8c7188, bool, Params(unsigned long unk1, float unk2), Args(unk1, unk2));
	DefineMethod(FadeOutLightSourcesOnTarget, 0x8c6331, bool, Params(unsigned long unk1, float unk2), Args(unk1, unk2));
	DefineMethod(FinishAllTargetEffects, 0x8c33a5, bool, Params(unsigned long unk1), Args(unk1));
	DefineMethod(FinishFlickFX, 0x8c867e, bool, Params(const FFXID_* unk1), Args(unk1));
	DefineMethod(GetEffectVisible, 0x8c363f, bool, Params(unsigned long unk1), Args(unk1));
	DefineMethod(IsFFXValid, 0x4249c3, bool, Params(const FFXID_* unk1), Args(unk1));
	DefineConstMethod(IsShuttingDown, 0x423e4f, bool, NO_PARAMS, NO_ARGS);
	DefineMethod(QueueAnimatedModelAnimChore, 0x8cc700, bool, Params(unsigned long unk1, const gpbstring<char>& unk2, int unk3, float unk4), Args(unk1, unk2, unk3, unk4));
	DefineMethod(QueueAnimatedModelAnimChore, 0x423bc8, bool, Params(unsigned long unk1, const gpbstring<char>& unk2, int unk3), Args(unk1, unk2, unk3));
	DefineMethod(QueueAnimatedModelAnimChore, 0x423bae, bool, Params(unsigned long unk1, const gpbstring<char>& unk2), Args(unk1, unk2));
	DefineMethod(ScaleAnimatedModel, 0x8c8387, bool, Params(unsigned long unk1, float unk2, float unk3), Args(unk1, unk2, unk3));
	DefineMethod(SDestroyFlickFX, 0x8d1853, bool, Params(const FFXID_* unk1), Args(unk1));
	DefineMethod(SetAnimatedModelTexture, 0x8c83f1, bool, Params(unsigned long unk1, int unk2, const char* unk3), Args(unk1, unk2, unk3));
	DefineMethod(SetDecalAlpha, 0x8c729d, bool, Params(unsigned long unk1, float unk2), Args(unk1, unk2));
	DefineMethod(SetLightSourceColor, 0x8c720a, bool, Params(unsigned long unk1, const vector_3& unk2), Args(unk1, unk2));
	DefineMethod(SetLightSourcePosition, 0x8c71cb, bool, Params(unsigned long unk1, const SiegePos& unk2), Args(unk1, unk2));
	DefineMethod(SetTerrainDeformerPosition, 0x8c844f, bool, Params(unsigned long unk1, const SiegePos& unk2), Args(unk1, unk2));
	DefineMethod(SFinishFlickFX, 0x8ca347, bool, Params(const FFXID_* unk1), Args(unk1));
	DefineMethod(ValidateMovingTarget, 0x8c3347, bool, Params(unsigned long unk1, unsigned long unk2, float unk3, float unk4), Args(unk1, unk2, unk3, unk4));
	DefineMethod(GetAnimatedModelAspect, 0x8c83d2, nema::Aspect::ResHandle, Params(unsigned long unk1), Args(unk1));
	DefineMethod(CreateFlickFX, 0x8d20ac, const FFXID_*, Params(const gpbstring<char>& unk1, const Goid_* unk2, bool unk3, bool unk4), Args(unk1, unk2, unk3, unk4));
	DefineMethod(CreateFlickFX, 0x8d20df, const FFXID_*, Params(const gpbstring<char>& unk1, const Goid_* unk2, const Goid_* unk3, bool unk4, bool unk5), Args(unk1, unk2, unk3, unk4, unk5));
	DefineMethod(CreateFlickFX, 0x8d2112, const FFXID_*, Params(const gpbstring<char>& unk1, const Goid_* unk2, const Goid_* unk3, const Goid_* unk4, bool unk5, bool unk6), Args(unk1, unk2, unk3, unk4, unk5, unk6));
	DefineMethod(CreateFlickFX, 0x423deb, const FFXID_*, Params(const gpbstring<char>& unk1, const Goid_* unk2, const Goid_* unk3, const Goid_* unk4), Args(unk1, unk2, unk3, unk4));
	DefineMethod(CreateFlickFX, 0x423dd2, const FFXID_*, Params(const gpbstring<char>& unk1, const Goid_* unk2, const Goid_* unk3), Args(unk1, unk2, unk3));
	DefineMethod(CreateFlickFX, 0x423dbc, const FFXID_*, Params(const gpbstring<char>& unk1, const Goid_* unk2), Args(unk1, unk2));
	DefineConstMethod(GetCurrentFlickFX, 0x423e18, const FFXID_*, NO_PARAMS, NO_ARGS);
	DefineMethod(SCreateFlickFX, 0x8d1cfd, const FFXID_*, Params(const gpbstring<char>& unk1, const Goid_* unk2, bool unk3, bool unk4), Args(unk1, unk2, unk3, unk4));
	DefineMethod(SCreateFlickFX, 0x423d39, const FFXID_*, Params(const gpbstring<char>& unk1, const Goid_* unk2, bool unk3), Args(unk1, unk2, unk3));
	DefineMethod(SCreateFlickFX, 0x8d1e14, const FFXID_*, Params(const gpbstring<char>& unk1, const Goid_* unk2, const Goid_* unk3, bool unk4, bool unk5), Args(unk1, unk2, unk3, unk4, unk5));
	DefineMethod(SCreateFlickFX, 0x423d69, const FFXID_*, Params(const gpbstring<char>& unk1, const Goid_* unk2, const Goid_* unk3, bool unk4), Args(unk1, unk2, unk3, unk4));
	DefineMethod(SCreateFlickFX, 0x8d1f50, const FFXID_*, Params(const gpbstring<char>& unk1, const Goid_* unk2, const Goid_* unk3, const Goid_* unk4, bool unk5, bool unk6), Args(unk1, unk2, unk3, unk4, unk5, unk6));
	DefineMethod(SCreateFlickFX, 0x423d9f, const FFXID_*, Params(const gpbstring<char>& unk1, const Goid_* unk2, const Goid_* unk3, const Goid_* unk4, bool unk5), Args(unk1, unk2, unk3, unk4, unk5));
	DefineMethod(SCreateFlickFX, 0x423d83, const FFXID_*, Params(const gpbstring<char>& unk1, const Goid_* unk2, const Goid_* unk3, const Goid_* unk4), Args(unk1, unk2, unk3, unk4));
	DefineMethod(SCreateFlickFX, 0x423d50, const FFXID_*, Params(const gpbstring<char>& unk1, const Goid_* unk2, const Goid_* unk3), Args(unk1, unk2, unk3));
	DefineMethod(SCreateFlickFX, 0x423d23, const FFXID_*, Params(const gpbstring<char>& unk1, const Goid_* unk2), Args(unk1, unk2));
	DefineConstMethod(GetCurrentFlickFXCatalyst, 0x423e2d, const Goid_*, NO_PARAMS, NO_ARGS);
	DefineConstMethod(GetCurrentFlickFXOwner, 0x423e1c, const Goid_*, NO_PARAMS, NO_ARGS);
	DefineConstMethod(GetCurrentFlickFXTarget, 0x423e3e, const Goid_*, NO_PARAMS, NO_ARGS);
	DefineMethod(GetTargetPosition, 0x8c340d, const SiegePos&, Params(unsigned long unk1), Args(unk1));
	DefineMethod(GetTargetVectorToTarget, 0x8c3500, const vector_3&, Params(unsigned long unk1, unsigned long unk2), Args(unk1, unk2));
	DefineMethod(GetTargetVelocity, 0x8c3482, const vector_3&, Params(unsigned long unk1), Args(unk1));
	DefineMethod(GetDistanceBetweenTargets, 0x8c4d07, float, Params(unsigned long unk1, unsigned long unk2), Args(unk1, unk2));
	DefineMethod(GetTargetSpeed, 0x8c34d8, float, Params(unsigned long unk1), Args(unk1));
	DefineMethod(SetEffectTexture, 0x8c3708, unsigned int, Params(unsigned long unk1, const gpbstring<char>& unk2, float unk3, float unk4), Args(unk1, unk2, unk3, unk4));
	DefineMethod(SetEffectTexture, 0x8c36e3, unsigned int, Params(unsigned long unk1, const gpbstring<char>& unk2), Args(unk1, unk2));
	//DefineVarArgMethod(AttachSimulationf, 0x8c8b4e, unsigned long, Params(unsigned long unk1, float unk2, float unk3, const char* unk4));
	DefineMethod(AttachGlobalSimulation, 0x8c3693, unsigned long, Params(unsigned long unk1, const gpbstring<char>& unk2, float unk3), Args(unk1, unk2, unk3));
	DefineMethod(AttachSimulation, 0x8c364e, unsigned long, Params(unsigned long unk1, const gpbstring<char>& unk2, float unk3), Args(unk1, unk2, unk3));
	DefineMethod(AttachTargetSimulation, 0x423c4b, unsigned long, Params(unsigned long unk1, const gpbstring<char>& unk2, float unk3), Args(unk1, unk2, unk3));
	DefineMethod(AttachTargetSimulation, 0x423c82, unsigned long, Params(unsigned long unk1, const gpbstring<char>& unk2), Args(unk1, unk2));
	DefineMethod(AttachTargetSimulation, 0x8ccd17, unsigned long, Params(unsigned long unk1, unsigned long unk2, const gpbstring<char>& unk3, float unk4), Args(unk1, unk2, unk3, unk4));
	DefineMethod(AttachTargetSimulation, 0x423c67, unsigned long, Params(unsigned long unk1, unsigned long unk2, const gpbstring<char>& unk3), Args(unk1, unk2, unk3));
	DefineMethod(CreateAnimatedModel, 0x8cdd04, unsigned long, Params(unsigned long unk1, const gpbstring<char>& unk2), Args(unk1, unk2));
	DefineMethod(CreateAnimatedModel, 0x8cdd71, unsigned long, Params(unsigned long unk1, const Goid_* unk2), Args(unk1, unk2));
	DefineMethod(CreateCylinderBetweenTargets, 0x8c7564, unsigned long, Params(unsigned long unk1, unsigned long unk2, unsigned long unk3, float unk4, float unk5, unsigned long unk6, unsigned long unk7, float unk8, bool unk9, bool unk10), Args(unk1, unk2, unk3, unk4, unk5, unk6, unk7, unk8, unk9, unk10));
	DefineMethod(CreateCylinderEffect, 0x8c74e8, unsigned long, Params(unsigned long unk1, unsigned long unk2, const vector_3& unk3, float unk4, float unk5, float unk6, float unk7, unsigned long unk8, unsigned long unk9, float unk10, bool unk11, bool unk12), Args(unk1, unk2, unk3, unk4, unk5, unk6, unk7, unk8, unk9, unk10, unk11, unk12));
	DefineMethod(CreateCylinderEffect, 0x423ce0, unsigned long, Params(unsigned long unk1, unsigned long unk2, const vector_3& unk3, float unk4, float unk5, float unk6, float unk7, unsigned long unk8, unsigned long unk9), Args(unk1, unk2, unk3, unk4, unk5, unk6, unk7, unk8, unk9));
	DefineMethod(CreateDecalDiscEffect, 0x8c7437, unsigned long, Params(unsigned long unk1, unsigned long unk2, unsigned long unk3, float unk4, unsigned long unk5, unsigned long unk6, float unk7, float unk8, bool unk9), Args(unk1, unk2, unk3, unk4, unk5, unk6, unk7, unk8, unk9));
	DefineMethod(CreateDiscEffect, 0x8c73b8, unsigned long, Params(unsigned long unk1, unsigned long unk2, float unk3, const vector_3& unk4, float unk5, float unk6, unsigned long unk7, unsigned long unk8, float unk9, float unk10, float unk11, bool unk12), Args(unk1, unk2, unk3, unk4, unk5, unk6, unk7, unk8, unk9, unk10, unk11, unk12));
	DefineMethod(CreateEffectScript, 0x8cdf35, unsigned long, Params(const gpbstring<char>& unk1, unsigned long unk2), Args(unk1, unk2));
	DefineMethod(CreateLightSource, 0x8cddde, unsigned long, Params(const SiegePos& unk1, const vector_3& unk2, float unk3, float unk4, float unk5, float unk6, float unk7, bool unk8), Args(unk1, unk2, unk3, unk4, unk5, unk6, unk7, unk8));
	DefineMethod(CreateLightSource, 0x8cf268, unsigned long, Params(unsigned long unk1, const vector_3& unk2, float unk3, float unk4, float unk5, float unk6, float unk7, bool unk8), Args(unk1, unk2, unk3, unk4, unk5, unk6, unk7, unk8));
	DefineMethod(CreateModelEffect, 0x8c78ce, unsigned long, Params(unsigned long unk1, const gpbstring<char>& unk2, const vector_3& unk3, float unk4, unsigned long unk5, float unk6, bool unk7, bool unk8), Args(unk1, unk2, unk3, unk4, unk5, unk6, unk7, unk8));
	DefineMethod(CreateModelEffect, 0x8c786f, unsigned long, Params(unsigned long unk1, const gpbstring<char>& unk2, const vector_3& unk3, float unk4, unsigned long unk5, float unk6, bool unk7), Args(unk1, unk2, unk3, unk4, unk5, unk6, unk7));
	DefineMethod(CreateModelEffect, 0x8c7810, unsigned long, Params(unsigned long unk1, const gpbstring<char>& unk2, const vector_3& unk3, unsigned long unk4, float unk5, bool unk6, bool unk7), Args(unk1, unk2, unk3, unk4, unk5, unk6, unk7));
	DefineMethod(CreateModelEffect, 0x8c77b2, unsigned long, Params(unsigned long unk1, const gpbstring<char>& unk2, const vector_3& unk3, unsigned long unk4, float unk5, bool unk6), Args(unk1, unk2, unk3, unk4, unk5, unk6));
	DefineMethod(CreateModelEffect, 0x8c7752, unsigned long, Params(unsigned long unk1, const gpbstring<char>& unk2, unsigned long unk3, float unk4, bool unk5), Args(unk1, unk2, unk3, unk4, unk5));
	DefineMethod(CreateParticleEffect, 0x8c7329, unsigned long, Params(unsigned long unk1), Args(unk1));
	DefineMethod(CreateRibbonEffect, 0x8c736c, unsigned long, Params(unsigned long unk1, unsigned long unk2, eRibbonAlign unk3, bool unk4), Args(unk1, unk2, unk3, unk4));
	DefineMethod(CreateRibbonEffect, 0x8c85f9, unsigned long, Params(unsigned long unk1, unsigned long unk2, eRibbonAlign unk3), Args(unk1, unk2, unk3));
	DefineMethod(CreateSphereEffect, 0x8c76e7, unsigned long, Params(unsigned long unk1, unsigned long unk2, const vector_3& unk3, float unk4, float unk5, unsigned long unk6, float unk7, bool unk8, bool unk9, bool unk10), Args(unk1, unk2, unk3, unk4, unk5, unk6, unk7, unk8, unk9, unk10));
	DefineMethod(CreateSphereEffect, 0x8c767d, unsigned long, Params(unsigned long unk1, unsigned long unk2, const vector_3& unk3, float unk4, float unk5, unsigned long unk6, float unk7, bool unk8, bool unk9), Args(unk1, unk2, unk3, unk4, unk5, unk6, unk7, unk8, unk9));
	DefineMethod(CreateSphereEffect, 0x8c7611, unsigned long, Params(unsigned long unk1, unsigned long unk2, float unk3, unsigned long unk4, float unk5, bool unk6, bool unk7), Args(unk1, unk2, unk3, unk4, unk5, unk6, unk7));
	DefineMethod(CreateTarget, 0x423c12, unsigned long, NO_PARAMS, NO_ARGS);
	DefineMethod(CreateTarget, 0x8c8aad, unsigned long, Params(unsigned long unk1), Args(unk1));
	DefineMethod(CreateTerrainDecal, 0x8cde6e, unsigned long, Params(const SiegePos& unk1, const Quat& unk2, const gpbstring<char>& unk3, float unk4, float unk5, float unk6, float unk7, float unk8, float unk9, float unk10), Args(unk1, unk2, unk3, unk4, unk5, unk6, unk7, unk8, unk9, unk10));
	DefineMethod(CreateTerrainDecal, 0x8cf382, unsigned long, Params(const SiegePos& unk1, const Quat& unk2, const gpbstring<char>& unk3, float unk4, float unk5, float unk6, float unk7), Args(unk1, unk2, unk3, unk4, unk5, unk6, unk7));
	DefineMethod(CreateTerrainDecal, 0x8cf316, unsigned long, Params(unsigned long unk1, const gpbstring<char>& unk2, float unk3, float unk4, float unk5, float unk6, float unk7, float unk8, float unk9), Args(unk1, unk2, unk3, unk4, unk5, unk6, unk7, unk8, unk9));
	DefineMethod(CreateTerrainDecal, 0x8cfd74, unsigned long, Params(unsigned long unk1, const gpbstring<char>& unk2, float unk3, float unk4, float unk5, float unk6), Args(unk1, unk2, unk3, unk4, unk5, unk6));
	DefineMethod(CreateTimedTarget, 0x8c8a82, unsigned long, Params(float unk1, bool unk2, unsigned long unk3), Args(unk1, unk2, unk3));
	DefineMethod(CreateTimedTarget, 0x423bfa, unsigned long, Params(float unk1, bool unk2), Args(unk1, unk2));
	DefineMethod(CreateTimedTarget, 0x423be3, unsigned long, Params(float unk1), Args(unk1));
	DefineMethod(CreateWaveTerrainDeformer, 0x8cfe19, unsigned long, Params(const SiegePos& unk1, float unk2, float unk3, float unk4), Args(unk1, unk2, unk3, unk4));
	DefineMethod(CreateWaveTerrainDeformer, 0x8cfe6f, unsigned long, Params(unsigned long unk1, float unk2, float unk3, float unk4), Args(unk1, unk2, unk3, unk4));
	DefineConstMethod(GetNumAnimatedModels, 0x42493d, unsigned long, NO_PARAMS, NO_ARGS);
	DefineConstMethod(GetNumDecals, 0x42495e, unsigned long, NO_PARAMS, NO_ARGS);
	DefineConstMethod(GetNumGlobalEffectScripts, 0x42498a, unsigned long, NO_PARAMS, NO_ARGS);
	DefineConstMethod(GetNumLightSources, 0x42494b, unsigned long, NO_PARAMS, NO_ARGS);
	DefineConstMethod(GetNumTargets, 0x42440d, unsigned long, NO_PARAMS, NO_ARGS);
	DefineConstMethod(GetNumTerrainDeformers, 0x424974, unsigned long, NO_PARAMS, NO_ARGS);
	DefineMethod(AddBoneOffsetToTarget, 0x8c9df6, void, Params(unsigned long unk1, const vector_3& unk2), Args(unk1, unk2));
	DefineMethod(AddGlobalOffsetToTarget, 0x8c9e38, void, Params(unsigned long unk1, const vector_3& unk2), Args(unk1, unk2));
	DefineMethod(AddOffsetToTarget, 0x8c9db4, void, Params(unsigned long unk1, const vector_3& unk2), Args(unk1, unk2));
	DefineMethod(AddTargetToEffect, 0x8c3816, void, Params(unsigned long unk1, unsigned long unk2), Args(unk1, unk2));
	DefineMethod(AddTargetToScriptMsgLatch, 0x8cc732, void, Params(const FFXID_* unk1, unsigned long unk2, unsigned long unk3), Args(unk1, unk2, unk3));
	DefineMethod(AddTargetToScriptMsgLatch, 0x42441f, void, Params(unsigned long unk1, unsigned long unk2), Args(unk1, unk2));
	DefineMethod(AttachTargetToBone, 0x8c9ce2, void, Params(unsigned long unk1, const gpbstring<char>& unk2), Args(unk1, unk2));
	DefineMethod(AttachTargetToBone, 0x8c9d1e, void, Params(unsigned long unk1, unsigned int unk2), Args(unk1, unk2));
	DefineMethod(AttachTargetToDefaultPos, 0x8c9d44, void, Params(unsigned long unk1, const Goid_* unk2), Args(unk1, unk2));
	DefineMethod(AttachTargetToGo, 0x8c9c18, void, Params(unsigned long unk1, const Goid_* unk2, const gpbstring<char>& unk3), Args(unk1, unk2, unk3));
	DefineMethod(AttachTargetToGo, 0x8c9c80, void, Params(unsigned long unk1, const Goid_* unk2, unsigned int unk3), Args(unk1, unk2, unk3));
	DefineMethod(AttachTargetToGo, 0x423c37, void, Params(unsigned long unk1, const Goid_* unk2), Args(unk1, unk2));
	DefineMethod(AttachTargetToModel, 0x8c9b5a, void, Params(unsigned long unk1, unsigned long unk2, const gpbstring<char>& unk3), Args(unk1, unk2, unk3));
	DefineMethod(AttachTargetToModel, 0x8c9bbc, void, Params(unsigned long unk1, unsigned long unk2, unsigned int unk3), Args(unk1, unk2, unk3));
	DefineMethod(AttachTargetToModel, 0x423c23, void, Params(unsigned long unk1, unsigned long unk2), Args(unk1, unk2));
	DefineMethod(AttachTargetToTarget, 0x8c9b01, void, Params(unsigned long unk1, unsigned long unk2), Args(unk1, unk2));
	DefineMethod(ClearEffectTextures, 0x8c372f, void, Params(unsigned long unk1), Args(unk1));
	DefineMethod(DestroyEffect, 0x8c3613, void, Params(unsigned long unk1), Args(unk1));
	DefineMethod(DetachGlobalSimulation, 0x8c36b8, void, Params(unsigned long unk1, float unk2), Args(unk1, unk2));
	DefineMethod(DetachSimulation, 0x8c3674, void, Params(unsigned long unk1, unsigned long unk2, float unk3), Args(unk1, unk2, unk3));
	DefineMethod(FinishEffect, 0x8c3630, void, Params(unsigned long unk1), Args(unk1));
	DefineMethod(PostFlickFXMessageToEffectScript, 0x8c7b7b, void, Params(const FFXID_* unk1, const WorldMessage& unk2, unsigned long unk3), Args(unk1, unk2, unk3));
	DefineMethod(PostFlickFXMessageToTarget, 0x8c7b4d, void, Params(const FFXID_* unk1, const WorldMessage& unk2, unsigned long unk3), Args(unk1, unk2, unk3));
	DefineMethod(RCCreateFlickFX, 0x8d1a73, void, Params(const gpbstring<char>& unk1, const gpbstring<char>& unk2, const Goid_* unk3, const Goid_* unk4, const Goid_* unk5, eCreateFFXFlags unk6, const FFXID_* unk7), Args(unk1, unk2, unk3, unk4, unk5, unk6, unk7));
	DefineMethod(RCCreateFlickFX, 0x8d1978, void, Params(const gpbstring<char>& unk1, const gpbstring<char>& unk2, const Goid_* unk3, const Goid_* unk4, eCreateFFXFlags unk5, const FFXID_* unk6), Args(unk1, unk2, unk3, unk4, unk5, unk6));
	DefineMethod(RCCreateFlickFX, 0x8d187d, void, Params(const gpbstring<char>& unk1, const gpbstring<char>& unk2, const Goid_* unk3, eCreateFFXFlags unk4, const FFXID_* unk5), Args(unk1, unk2, unk3, unk4, unk5));
	DefineMethod(RCDestroyFlickFX, 0x8d10a4, void, Params(const FFXID_* unk1), Args(unk1));
	DefineMethod(RCFinishFlickFX, 0x8c8bc9, void, Params(const FFXID_* unk1), Args(unk1));
	DefineMethod(RemoveTargetFromEffect, 0x8c383a, void, Params(unsigned long unk1, unsigned long unk2), Args(unk1, unk2));
	DefineMethod(SetAnimatedModelRenderOrientOnly, 0x8c83b6, void, Params(unsigned long unk1, bool unk2), Args(unk1, unk2));
	DefineMethod(SetDistanceCoefficients, 0x8c37a5, void, Params(unsigned long unk1, float unk2, float unk3, float unk4), Args(unk1, unk2, unk3, unk4));
	DefineMethod(SetEffectAlphaOp, 0x8c374d, void, Params(unsigned long unk1, eTextureOp unk2), Args(unk1, unk2));
	DefineMethod(SetEffectCameraOffset, 0x8c377a, void, Params(unsigned long unk1, const vector_3& unk2), Args(unk1, unk2));
	DefineMethod(SetEffectColorOp, 0x8c373e, void, Params(unsigned long unk1, eTextureOp unk2), Args(unk1, unk2));
	DefineMethod(SetEffectDestBlend, 0x8c376b, void, Params(unsigned long unk1, ePixelBlend unk2), Args(unk1, unk2));
	DefineMethod(SetEffectGlobalSimAllowed, 0x8c36d4, void, Params(unsigned long unk1, bool unk2), Args(unk1, unk2));
	DefineMethod(SetEffectLighting, 0x8c3807, void, Params(unsigned long unk1, bool unk2, bool unk3), Args(unk1, unk2, unk3));
	DefineMethod(SetEffectSortingOffset, 0x8c3789, void, Params(unsigned long unk1, float unk2), Args(unk1, unk2));
	DefineMethod(SetEffectSrcBlend, 0x8c375c, void, Params(unsigned long unk1, ePixelBlend unk2), Args(unk1, unk2));
	DefineMethod(SetLockOrientToTarget, 0x8c33de, void, Params(unsigned long unk1, unsigned long unk2, unsigned long unk3), Args(unk1, unk2, unk3));
	DefineMethod(SetLockOrientToVelocity, 0x8ca321, void, Params(unsigned long unk1, bool unk2), Args(unk1, unk2));
	DefineMethod(SetParticleTracers, 0x8c37e0, void, Params(unsigned long unk1, bool unk2, float unk3, float unk4), Args(unk1, unk2, unk3, unk4));
	DefineMethod(SetQuadRendering, 0x8c37d1, void, Params(unsigned long unk1, bool unk2), Args(unk1, unk2));
	DefineMethod(SetTargetBoneOffset, 0x8ca289, void, Params(unsigned long unk1, const vector_3& unk2), Args(unk1, unk2));
	DefineMethod(SetTargetDependence, 0x8c387c, void, Params(unsigned long unk1, bool unk2, bool unk3), Args(unk1, unk2, unk3));
	DefineMethod(SetTargetExternal, 0x8c33c5, void, Params(unsigned long unk1, bool unk2), Args(unk1, unk2));
	DefineMethod(SetTargetGlobalOffset, 0x8ca2b6, void, Params(unsigned long unk1, const vector_3& unk2), Args(unk1, unk2));
	DefineMethod(SetTargetOffset, 0x8ca25c, void, Params(unsigned long unk1, const vector_3& unk2), Args(unk1, unk2));
	DefineMethod(SetTargetOffsetRingPerpToVector, 0x8ca2e3, void, Params(unsigned long unk1, const vector_3& unk2, float unk3, float unk4), Args(unk1, unk2, unk3, unk4));
	DefineMethod(SetTargetOffsets, 0x8ca21d, void, Params(unsigned long unk1, const vector_3& unk2, const vector_3& unk3, const vector_3& unk4), Args(unk1, unk2, unk3, unk4));
	DefineMethod(SetTargetOrientation, 0x8c9ed3, void, Params(unsigned long unk1, const Quat& unk2), Args(unk1, unk2));
	DefineMethod(SetTargetPlacement, 0x8c9f01, void, Params(unsigned long unk1, const SiegePos& unk2, const Quat& unk3), Args(unk1, unk2, unk3));
	DefineMethod(SetTargetPosition, 0x8c9e7a, void, Params(unsigned long unk1, const SiegePos& unk2), Args(unk1, unk2));
	DefineMethod(SetTargetToBone, 0x8ca11a, void, Params(unsigned long unk1, const gpbstring<char>& unk2), Args(unk1, unk2));
	DefineMethod(SetTargetToBone, 0x8ca15d, void, Params(unsigned long unk1, unsigned int unk2), Args(unk1, unk2));
	DefineMethod(SetTargetToDefaultPos, 0x8ca19a, void, Params(unsigned long unk1, const Goid_* unk2), Args(unk1, unk2));
	DefineMethod(SetTargetToGo, 0x8ca022, void, Params(unsigned long unk1, const Goid_* unk2, const gpbstring<char>& unk3), Args(unk1, unk2, unk3));
	DefineMethod(SetTargetToGo, 0x8ca0a1, void, Params(unsigned long unk1, const Goid_* unk2, unsigned int unk3), Args(unk1, unk2, unk3));
	DefineMethod(SetTargetToGo, 0x423ccc, void, Params(unsigned long unk1, const Goid_* unk2), Args(unk1, unk2));
	DefineMethod(SetTargetToModel, 0x8c9f3e, void, Params(unsigned long unk1, unsigned long unk2, const gpbstring<char>& unk3), Args(unk1, unk2, unk3));
	DefineMethod(SetTargetToModel, 0x8c9fb3, void, Params(unsigned long unk1, unsigned long unk2, unsigned int unk3), Args(unk1, unk2, unk3));
	DefineMethod(SetTargetToModel, 0x423cb5, void, Params(unsigned long unk1, unsigned long unk2), Args(unk1, unk2));
};
